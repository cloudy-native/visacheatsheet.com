{"version":3,"file":"component---src-pages-visa-wizard-tsx-b511357692b19142d2ed.js","mappings":"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","sources":["webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/Icon.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/arrow-left.js","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/progress/progress.utils.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/progress/progress.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-context.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-header.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-body.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/list/list.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/badge/badge.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-footer.mjs","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/info.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/arrow-right.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/circle-check-big.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/external-link.js","webpack://gatsby-typescript-chakraui/./src/decisiontrees/VisaDecisionTree.tsx","webpack://gatsby-typescript-chakraui/./src/components/CountryCard.tsx","webpack://gatsby-typescript-chakraui/./src/components/VisaWizard.tsx","webpack://gatsby-typescript-chakraui/./src/pages/visa-wizard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\n];\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", __iconNode);\n\nexport { __iconNode, ArrowLeft as default };\n//# sourceMappingURL=arrow-left.js.map\n","'use client';\nimport { keyframes } from '@emotion/react';\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nconst spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nconst rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nconst progress = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" }\n});\nconst stripe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" }\n});\nfunction getProgressProps(options) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate,\n    role = \"progressbar\"\n  } = options;\n  const percent = valueToPercent(value, min, max);\n  const getAriaValueText = () => {\n    if (value == null)\n      return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role\n    },\n    percent,\n    value\n  };\n}\n\nexport { getProgressProps, progress, rotate, spin, stripe };\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext } from '@chakra-ui/utils';\nimport { getProgressProps, progress, stripe } from './progress.utils.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\n\nconst [ProgressStylesProvider, useProgressStyles] = createContext({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `\n});\nconst ProgressFilledTrack = forwardRef(\n  (props, ref) => {\n    const { min, max, value, isIndeterminate, role, ...rest } = props;\n    const progress2 = getProgressProps({\n      value,\n      min,\n      max,\n      isIndeterminate,\n      role\n    });\n    const styles = useProgressStyles();\n    const trackStyles = {\n      height: \"100%\",\n      ...styles.filledTrack\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        style: { width: `${progress2.percent}%`, ...rest.style },\n        ...progress2.bind,\n        ...rest,\n        __css: trackStyles\n      }\n    );\n  }\n);\nconst Progress = forwardRef((props, ref) => {\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueText,\n    title,\n    role,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Progress\", props);\n  const borderRadius = propBorderRadius ?? styles.track?.borderRadius;\n  const stripeAnimation = { animation: `${stripe} 1s linear infinite` };\n  const shouldAddStripe = !isIndeterminate && hasStripe;\n  const shouldAnimateStripe = shouldAddStripe && isAnimated;\n  const css = {\n    ...shouldAnimateStripe && stripeAnimation,\n    ...isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`\n    }\n  };\n  const trackStyles = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      borderRadius,\n      __css: trackStyles,\n      ...rest,\n      children: /* @__PURE__ */ jsxs(ProgressStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          ProgressFilledTrack,\n          {\n            \"aria-label\": ariaLabel,\n            \"aria-labelledby\": ariaLabelledBy,\n            \"aria-valuetext\": ariaValueText,\n            min,\n            max,\n            value,\n            isIndeterminate,\n            css,\n            borderRadius,\n            title,\n            role\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nProgress.displayName = \"Progress\";\n\nexport { Progress, useProgressStyles };\n","'use client';\nimport { createStylesContext } from '../system/providers.mjs';\n\nconst [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport { CardStylesProvider, useCardStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { CardStylesProvider } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport { Card };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardHeader };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardBody = forwardRef(\n  function CardBody2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__body\", className),\n        __css: styles.body,\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardBody };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, getValidChildren } from '@chakra-ui/utils';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nconst List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nconst OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nconst UnorderedList = forwardRef(\n  function UnorderedList2(props, ref) {\n    const { as, ...rest } = props;\n    return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n  }\n);\nUnorderedList.displayName = \"UnorderedList\";\nconst ListItem = forwardRef(\n  function ListItem2(props, ref) {\n    const styles = useListStyles();\n    return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n  }\n);\nListItem.displayName = \"ListItem\";\nconst ListIcon = forwardRef(\n  function ListIcon2(props, ref) {\n    const styles = useListStyles();\n    return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n  }\n);\nListIcon.displayName = \"ListIcon\";\n\nexport { List, ListIcon, ListItem, OrderedList, UnorderedList, useListStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport { Badge };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardFooter };\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n];\nconst RotateCcw = createLucideIcon(\"RotateCcw\", __iconNode);\n\nexport { __iconNode, RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n];\nconst Info = createLucideIcon(\"Info\", __iconNode);\n\nexport { __iconNode, Info as default };\n//# sourceMappingURL=info.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"ArrowRight\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M21.801 10A10 10 0 1 1 17 3.335\", key: \"yps3ct\" }],\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }]\n];\nconst CircleCheckBig = createLucideIcon(\"CircleCheckBig\", __iconNode);\n\nexport { __iconNode, CircleCheckBig as default };\n//# sourceMappingURL=circle-check-big.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 3h6v6\", key: \"1q9fwt\" }],\n  [\"path\", { d: \"M10 14 21 3\", key: \"gplh6r\" }],\n  [\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\", key: \"a6xqqp\" }]\n];\nconst ExternalLink = createLucideIcon(\"ExternalLink\", __iconNode);\n\nexport { __iconNode, ExternalLink as default };\n//# sourceMappingURL=external-link.js.map\n","import {\n  Badge,\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Collapse,\n  Container,\n  Divider,\n  Flex,\n  Heading,\n  Link,\n  List,\n  ListIcon,\n  ListItem,\n  Progress,\n  Text,\n  useColorModeValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport {\n  ArrowLeft,\n  ArrowRight,\n  CheckCircle,\n  ExternalLink,\n  Info,\n  RotateCcw,\n} from \"lucide-react\";\nimport React, { useState } from \"react\";\nimport type {\n  AnswerOption,\n  VisaDecisionTree as DecisionTreeType,\n  VisaResult,\n} from \"./model\";\n\ninterface VisaDecisionTreeProps {\n  decisionTree: DecisionTreeType;\n}\n\nconst VisaDecisionTree: React.FC<VisaDecisionTreeProps> = ({\n  decisionTree,\n}) => {\n  const [currentQuestionId, setCurrentQuestionId] = useState<string>(\n    decisionTree.startQuestionId\n  );\n  const [result, setResult] = useState<VisaResult | null>(null);\n  const [journey, setJourney] = useState<\n    Array<{\n      questionId: string;\n      questionText: string;\n      answerId: string;\n      answerText: string;\n    }>\n  >([]);\n  const [showJourney, setShowJourney] = useState<boolean>(false);\n\n  const currentQuestion = decisionTree.questions[currentQuestionId];\n\n  const handleSelectOption = (option: AnswerOption) => {\n    // Add to journey\n    setJourney([\n      ...journey,\n      {\n        questionId: currentQuestionId,\n        questionText: currentQuestion.text,\n        answerId: option.id,\n        answerText: option.text,\n      },\n    ]);\n\n    // Check if the next destination is a result (starts with 'r')\n    if (option.nextQuestionId && option.nextQuestionId.startsWith(\"r\")) {\n      // Set the result from the decision tree results\n      const resultId = option.nextQuestionId;\n      setResult(decisionTree.results[resultId]);\n    } else if (option.nextQuestionId) {\n      // Move to the next question\n      setCurrentQuestionId(option.nextQuestionId);\n    }\n  };\n\n  const handleBack = () => {\n    if (result) {\n      setResult(null);\n    } else if (journey.length > 0) {\n      const newJourney = [...journey];\n      newJourney.pop();\n      setJourney(newJourney);\n\n      if (newJourney.length === 0) {\n        setCurrentQuestionId(decisionTree.startQuestionId);\n      } else {\n        const previousStep = newJourney[newJourney.length - 1];\n        setCurrentQuestionId(previousStep.questionId);\n      }\n    }\n  };\n\n  const resetJourney = () => {\n    setJourney([]);\n    setCurrentQuestionId(decisionTree.startQuestionId);\n    setResult(null);\n  };\n\n  // Calculate progress percentage - estimate 4 questions as average path length\n  const progressPercentage = result\n    ? 100\n    : Math.min(100, (journey.length / 4) * 100);\n\n  return (\n    <Container maxW=\"5xl\" py={8}>\n      {/* Navigation Buttons */}\n      <Flex mb={4} justify=\"space-between\" align=\"center\">\n        <Box>\n          {(journey.length > 0 || result) && (\n            <Button\n              leftIcon={<ArrowLeft size={16} />}\n              colorScheme=\"blue\"\n              size=\"sm\"\n              onClick={handleBack}\n            >\n              Back\n            </Button>\n          )}\n        </Box>\n        <Box>\n          <Button\n            colorScheme=\"blue\"\n            rightIcon={<RotateCcw size={16} />}\n            size=\"sm\"\n            onClick={resetJourney}\n          >\n            Start Over\n          </Button>\n        </Box>\n      </Flex>\n\n      {/* Progress Bar */}\n      <Box mb={6}>\n        <Progress\n          value={progressPercentage}\n          size=\"sm\"\n          colorScheme=\"blue\"\n          borderRadius=\"full\"\n        />\n        <Flex justify=\"space-between\" mt={2}>\n          <Text fontSize=\"sm\">Start</Text>\n          <Text fontSize=\"sm\">Result</Text>\n        </Flex>\n      </Box>\n\n      <Flex direction={{ base: \"column\", md: \"row\" }} gap={6}>\n        {/* Main Content */}\n        <Box flex=\"3\">\n          {/* Question Card */}\n          {!result && (\n            <Card\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              shadow=\"md\"\n              overflow=\"hidden\"\n            >\n              <CardHeader>\n                <Heading size=\"md\">{currentQuestion.text}</Heading>\n                {currentQuestion.helpText && (\n                  <Flex align=\"center\" mt={2}>\n                    <Info size={14} />\n                    <Text ml={2} fontSize=\"sm\">\n                      {currentQuestion.helpText}\n                    </Text>\n                  </Flex>\n                )}\n              </CardHeader>\n\n              <CardBody>\n                <VStack spacing={3} align=\"stretch\">\n                  {currentQuestion.options.map((option) => (\n                    <Button\n                      colorScheme=\"blue\"\n                      key={option.id}\n                      onClick={() => handleSelectOption(option)}\n                      size=\"lg\"\n                      justifyContent=\"space-between\"\n                      textAlign=\"left\"\n                      height=\"auto\"\n                      py={3}\n                      px={4}\n                      whiteSpace=\"normal\"\n                      borderWidth=\"1px\"\n                      borderRadius=\"md\"\n                    >\n                      <Text>{option.text}</Text>\n                      <ArrowRight\n                        size={18}\n                        style={{ marginLeft: \"10px\", opacity: 0.6 }}\n                      />\n                    </Button>\n                  ))}\n                </VStack>\n              </CardBody>\n            </Card>\n          )}\n\n          {/* Result Card */}\n          {result && (\n            <Card\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              shadow=\"md\"\n              overflow=\"hidden\"\n            >\n              <CardHeader>\n                <Heading size=\"xl\" mb={2}>\n                  {result.title}\n                </Heading>\n              </CardHeader>\n\n              <CardBody>\n                <VStack spacing={6} align=\"stretch\">\n                  <Text>{result.description}</Text>\n\n                  <Box>\n                    <Heading size={\"md\"} mb={2}>\n                      Requirements\n                    </Heading>\n                    <List spacing={2}>\n                      {result.requirements.map((req, index) => (\n                        <ListItem\n                          key={index}\n                          display=\"flex\"\n                          alignItems=\"flex-start\"\n                        >\n                          <ListIcon as={CheckCircle} mt={1} />\n                          <Text>{req}</Text>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n\n                  <Flex justify=\"space-between\" wrap=\"wrap\" gap={4}>\n                    {result.processingTime && (\n                      <Box flex=\"1\" minW=\"200px\">\n                        <Heading size={\"md\"} mb={2}>\n                          Processing Time\n                        </Heading>\n                        <Text>{result.processingTime}</Text>\n                      </Box>\n                    )}\n\n                    {result.cost && (\n                      <Box flex=\"1\" minW=\"200px\">\n                        <Heading size={\"md\"} mb={2}>\n                          Cost\n                        </Heading>\n                        <Text>\n                          {result.cost.amount === 0\n                            ? \"Free\"\n                            : `${result.cost.amount} ${result.cost.currency}`}\n                        </Text>\n                      </Box>\n                    )}\n                  </Flex>\n\n                  <Box>\n                    <Heading size={\"md\"} mb={2}>\n                      Applicable Countries\n                    </Heading>\n                    <Flex gap={2} flexWrap=\"wrap\">\n                      {result.applicableCountries.map((country, index) => (\n                        <Badge key={index} colorScheme=\"blue\" px={2} py={1}>\n                          {country}\n                        </Badge>\n                      ))}\n                    </Flex>\n                  </Box>\n\n                  {result.alternativeOptions &&\n                    result.alternativeOptions.length > 0 && (\n                      <>\n                        <Heading size={\"md\"} mb={2}>\n                          Also Consider\n                        </Heading>\n                        <Flex wrap=\"wrap\" gap={2}>\n                          {result.alternativeOptions.map((altId, index) => {\n                            const altVisa = decisionTree.results[altId];\n                            return (\n                              altVisa && (\n                                <Button\n                                  colorScheme=\"blue\"\n                                  key={index}\n                                  onClick={() => setResult(altVisa)}\n                                >\n                                  {altVisa.title}\n                                </Button>\n                              )\n                            );\n                          })}\n                        </Flex>\n                      </>\n                    )}\n\n                  <Box>\n                    <Heading size={\"md\"} mb={2}>\n                      Official Links\n                    </Heading>\n                    <List spacing={2}>\n                      {result.applicationLinks.map((link, index) => (\n                        <ListItem key={index}>\n                          <Link\n                            href={link.url}\n                            isExternal\n                            display=\"flex\"\n                            alignItems=\"center\"\n                          >\n                            {link.text}\n                            <ExternalLink\n                              size={14}\n                              style={{ marginLeft: \"5px\" }}\n                            />\n                          </Link>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n                </VStack>\n              </CardBody>\n\n              <CardFooter borderTopWidth=\"1px\">\n                <Flex width=\"100%\" justify=\"space-between\">\n                  <Button\n                    leftIcon={<RotateCcw size={16} />}\n                    colorScheme=\"blue\"\n                    onClick={resetJourney}\n                  >\n                    Start New Search\n                  </Button>\n\n                  <Button\n                    colorScheme=\"blue\"\n                    rightIcon={<ArrowRight size={16} />}\n                    onClick={() =>\n                      window.open(result.applicationLinks[0].url, \"_blank\")\n                    }\n                  >\n                    Apply Now\n                  </Button>\n                </Flex>\n              </CardFooter>\n            </Card>\n          )}\n        </Box>\n\n        {/* Journey Sidebar */}\n        <Box\n          flex=\"1\"\n          display={{ base: result ? \"block\" : \"none\", md: \"block\" }}\n        >\n          <Card borderWidth=\"1px\" borderRadius=\"lg\" shadow=\"md\">\n            <CardHeader\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Heading size=\"sm\">Your Journey</Heading>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                colorScheme=\"blue\"\n                onClick={() => setShowJourney(!showJourney)}\n                display={{ base: \"block\", md: \"none\" }}\n              >\n                {showJourney ? \"Hide\" : \"Show\"}\n              </Button>\n            </CardHeader>\n\n            <Collapse in={showJourney || { base: false, md: true }}>\n              <CardBody>\n                {journey.length === 0 ? (\n                  <Text fontSize=\"sm\">No selections yet</Text>\n                ) : (\n                  <VStack spacing={4} align=\"stretch\">\n                    {journey.map((step, index) => (\n                      <Box key={index}>\n                        <Text fontSize=\"xs\">Question {index + 1}</Text>\n                        <Text fontWeight=\"medium\" fontSize=\"sm\">\n                          {step.questionText}\n                        </Text>\n                        <Flex align=\"center\">\n                          <Badge colorScheme=\"blue\" mt={1}>\n                            {step.answerText}\n                          </Badge>\n                        </Flex>\n                        {index < journey.length - 1 && <Divider my={2} />}\n                      </Box>\n                    ))}\n                  </VStack>\n                )}\n              </CardBody>\n            </Collapse>\n          </Card>\n        </Box>\n      </Flex>\n      <Box mt={6}>\n        <Text fontSize=\"xs\" color={useColorModeValue(\"gray.400\", \"gray.600\")}>\n          Version: {decisionTree.metadata.version} | Last Updated:{\" \"}\n          {decisionTree.metadata.lastUpdated} by {decisionTree.metadata.author}{\" \"}\n          | Countries: {decisionTree.metadata.countries.join(\", \")}\n        </Text>\n      </Box>\n    </Container>\n  );\n};\n\nexport default VisaDecisionTree;\n","import { Box, Button, useColorModeValue, VStack } from \"@chakra-ui/react\";\nimport { ArrowRight } from \"lucide-react\";\nimport React from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\n\nexport type CountryProps = {\n  id: string;\n  name: string;\n  countryCode: string;\n  isSelected: boolean;\n  onSelect: (id: string) => void;\n};\n\nconst CountryCard: React.FC<CountryProps> = ({\n  id,\n  name,\n  countryCode,\n  isSelected,\n  onSelect,\n}) => {\n  return (\n    <Box\n      p={4}\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      cursor=\"pointer\"\n      transition=\"all 0.2s\"\n      _hover={{ transform: \"translateY(-2px)\", shadow: \"md\" }}\n      onClick={() => onSelect(id)}\n      role=\"button\"\n      aria-label={`View ${name} visa requirements`}\n    >\n      <VStack spacing={3}>\n        <Button variant=\"ghost\" rightIcon={<ArrowRight size={16} />}>\n          {name}\n        </Button>\n          <ReactCountryFlag\n            countryCode={countryCode}\n            svg\n            style={{ fontSize: \"120px\" }}\n          />\n      </VStack>\n    </Box>\n  );\n};\n\nexport default CountryCard;\n","import {\n  Box,\n  Button,\n  Container,\n  Flex,\n  Heading,\n  SimpleGrid,\n  Text,\n  useColorModeValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { ArrowLeft } from \"lucide-react\";\nimport React, { useState } from \"react\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport VisaDecisionTree from \"../decisiontrees/VisaDecisionTree\";\nimport { visas } from \"../decisiontrees/visas\";\nimport CountryCard from \"./CountryCard\";\n\n// Main Visa Wizard component\nconst VisaWizard: React.FC = () => {\n  // Check for country parameter in URL query\n  const [selectedCountry, setSelectedCountry] = useState<string | null>(null);\n  const [showDecisionTree, setShowDecisionTree] = useState<boolean>(false);\n\n  // Use effect to check for country parameter in URL on component mount\n  React.useEffect(() => {\n    // Check if we're in the browser environment\n    if (typeof window !== \"undefined\") {\n      const params = new URLSearchParams(window.location.search);\n      const countryParam = params.get(\"country\");\n\n      if (countryParam) {\n        // Validate that the country exists in our list\n        const validCountry = visas.find((c) => c.id === countryParam);\n        if (validCountry) {\n          setSelectedCountry(countryParam);\n          setShowDecisionTree(true);\n        }\n      }\n    }\n  }, []);\n\n  const handleSelectCountry = (id: string) => {\n    setSelectedCountry(id);\n\n    // Immediately show the decision tree when a country is selected\n    setShowDecisionTree(true);\n\n    // Update URL with the selected country (without page reload)\n    if (typeof window !== \"undefined\") {\n      const url = new URL(window.location.href);\n      url.searchParams.set(\"country\", id);\n      window.history.pushState({}, \"\", url);\n    }\n  };\n\n  const handleBackToCountries = () => {\n    setShowDecisionTree(false);\n\n    // Remove country parameter from URL (without page reload)\n    if (typeof window !== \"undefined\") {\n      const url = new URL(window.location.href);\n      url.searchParams.delete(\"country\");\n      window.history.pushState({}, \"\", url);\n    }\n  };\n\n  // Find the selected country data\n  const selectedCountryData = selectedCountry\n    ? visas.find((country) => country.id === selectedCountry)\n    : null;\n\n  return (\n    <Container maxW=\"6xl\" py={10}>\n      {!showDecisionTree ? (\n        <>\n          <VStack spacing={6} mb={12} textAlign=\"center\">\n            <Heading\n              as=\"h1\"\n              size=\"xl\"\n              color={useColorModeValue(\"blue.600\", \"blue.300\")}\n            >\n              Let's Get Started\n            </Heading>\n            <Text fontSize=\"lg\" maxW=\"3xl\">\n              Where do you want to go?\n            </Text>\n          </VStack>\n\n          <SimpleGrid columns={{ base: 1, sm: 2, md: 3, lg: 4 }} spacing={6}>\n            {visas.map((country) => (\n              <CountryCard\n                key={country.id}\n                id={country.id}\n                name={country.name}\n                countryCode={country.countryCode}\n                isSelected={selectedCountry === country.id}\n                onSelect={handleSelectCountry}\n              />\n            ))}\n          </SimpleGrid>\n        </>\n      ) : (\n        <>\n          {selectedCountryData && (\n            <Box mb={6}>\n              <Flex align=\"center\" gap={4}>\n                <Button\n                  variant=\"ghost\"\n                  colorScheme=\"blue\"\n                  onClick={handleBackToCountries}\n                  leftIcon={<ArrowLeft size={32} />}\n                />\n                <ReactCountryFlag\n                  countryCode={selectedCountryData.countryCode}\n                  svg\n                  style={{ fontSize: \"80px\" }}\n                />\n                <Heading\n                  as=\"h2\"\n                  size=\"lg\"\n                  color={useColorModeValue(\"blue.600\", \"blue.300\")}\n                >\n                  {selectedCountryData.name} Visa Requirements\n                </Heading>\n              </Flex>\n            </Box>\n          )}\n\n          {selectedCountryData && (\n            <VisaDecisionTree decisionTree={selectedCountryData.decisionTree} />\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default VisaWizard;\n","import { Box, useColorModeValue } from \"@chakra-ui/react\";\nimport { HeadFC } from \"gatsby\";\nimport React from \"react\";\nimport VisaWizard from \"../components/VisaWizard\";\n\nconst VisaWizardPage = () => {\n  const bgGradient = useColorModeValue(\n    \"linear(to-b, blue.50, white)\",\n    \"linear(to-b, gray.900, gray.800)\"\n  );\n  return (\n    <Box\n      bg={useColorModeValue(\"blue.50\", \"gray.900\")}\n      bgGradient={bgGradient}\n      py={8}\n    >\n      <VisaWizard />\n    </Box>\n  );\n};\n\nexport default VisaWizardPage;\n\nexport const Head: HeadFC = () => (\n  <title>Visa Wizard | Find the Right Visa for Your Trip</title>\n);\n"],"names":["mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","Number","map","tag","attrs","Array","isArray","createLucideIcon","iconName","Component","props","string","replace","toLowerCase","displayName","ArrowLeft","d","key","strokeDasharray","strokeDashoffset","transform","progress","left","stripe","from","backgroundPosition","to","ProgressStylesProvider","useProgressStyles","name","errorMessage","ProgressFilledTrack","min","max","value","isIndeterminate","role","progress2","options","valueText","getValueText","percent","valueToPercent","bind","getAriaValueText","getProgressProps","trackStyles","filledTrack","jsx","div","style","__css","Progress","hasStripe","isAnimated","borderRadius","propBorderRadius","ariaLabel","ariaLabelledBy","ariaValueText","title","styles","track","css","animation","position","willChange","minWidth","overflow","jsxs","CardStylesProvider","useCardStyles","Card","direction","justify","align","cx","display","flexDirection","justifyContent","alignItems","wordWrap","container","CardHeader","header","CardBody","body","ListStylesProvider","useListStyles","List","styleType","stylePosition","spacing","validChildren","selector","spacingStyle","mt","ul","listStyleType","listStylePosition","as","marginStart","ListItem","li","item","ListIcon","I","icon","Badge","span","whiteSpace","verticalAlign","CardFooter","footer","RotateCcw","Info","cy","r","ArrowRight","CircleCheckBig","ExternalLink","_ref","decisionTree","currentQuestionId","setCurrentQuestionId","useState","startQuestionId","result","setResult","journey","setJourney","showJourney","setShowJourney","currentQuestion","questions","resetJourney","progressPercentage","Math","length","React","Container","maxW","py","Flex","mb","Box","Button","leftIcon","colorScheme","onClick","handleBack","newJourney","_toConsumableArray","pop","previousStep","questionId","rightIcon","Text","fontSize","base","md","gap","flex","borderWidth","shadow","Heading","text","helpText","ml","VStack","option","id","concat","questionText","answerId","answerText","nextQuestionId","startsWith","resultId","results","handleSelectOption","textAlign","px","marginLeft","opacity","description","requirements","req","CheckCircle","wrap","processingTime","minW","cost","amount","currency","flexWrap","applicableCountries","country","alternativeOptions","altId","altVisa","applicationLinks","link","Link","href","url","isExternal","borderTopWidth","window","open","variant","Collapse","in","step","fontWeight","Divider","my","useColorModeValue","metadata","version","lastUpdated","author","countries","countryCode","isSelected","onSelect","p","cursor","transition","_hover","ReactCountryFlag","svg","VisaWizard","selectedCountry","setSelectedCountry","showDecisionTree","setShowDecisionTree","countryParam","URLSearchParams","location","search","get","visas","find","c","handleSelectCountry","URL","searchParams","set","history","pushState","selectedCountryData","handleBackToCountries","delete","VisaDecisionTree","SimpleGrid","columns","sm","lg","CountryCard","VisaWizardPage","bgGradient","bg","Head"],"sourceRoot":""}