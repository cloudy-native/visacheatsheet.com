{"version":3,"file":"component---src-pages-visa-wizard-tsx-228b714c0803da6b0149.js","mappings":"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","sources":["webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/globe.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/circle-arrow-left.js","webpack://gatsby-typescript-chakraui/./src/components/VisaWizard.tsx","webpack://gatsby-typescript-chakraui/./src/pages/visa-wizard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\", key: \"13o1zl\" }],\n  [\"path\", { d: \"M2 12h20\", key: \"9i4pu4\" }]\n];\nconst Globe = createLucideIcon(\"Globe\", __iconNode);\n\nexport { __iconNode, Globe as default };\n//# sourceMappingURL=globe.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M16 12H8\", key: \"1fr5h0\" }],\n  [\"path\", { d: \"m12 8-4 4 4 4\", key: \"15vm53\" }]\n];\nconst CircleArrowLeft = createLucideIcon(\"CircleArrowLeft\", __iconNode);\n\nexport { __iconNode, CircleArrowLeft as default };\n//# sourceMappingURL=circle-arrow-left.js.map\n","import {\n  Box,\n  Button,\n  Container,\n  Flex,\n  Heading,\n  Image,\n  SimpleGrid,\n  Text,\n  useColorModeValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { ArrowLeftCircle, ArrowRightCircle, Globe } from \"lucide-react\";\nimport React, { useState } from \"react\";\nimport VisaDecisionTree from \"../decisiontrees/VisaDecisionTree\";\nimport { visas } from \"../decisiontrees/visas\";\n\ntype CountryProps = {\n  id: string;\n  name: string;\n  flag: string;\n  isSelected: boolean;\n  onSelect: (id: string) => void;\n};\n\n// Individual country card component\nconst CountryCard: React.FC<CountryProps> = ({\n  id,\n  name,\n  flag,\n  isSelected,\n  onSelect,\n}) => {\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.700\");\n  const hoverBg = useColorModeValue(\"blue.50\", \"blue.900\");\n  const selectedBg = useColorModeValue(\"blue.100\", \"blue.800\");\n  const selectedBorder = useColorModeValue(\"blue.500\", \"blue.300\");\n\n  return (\n    <Box\n      p={4}\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      borderColor={isSelected ? selectedBorder : borderColor}\n      bg={isSelected ? selectedBg : bgColor}\n      cursor=\"pointer\"\n      transition=\"all 0.2s\"\n      _hover={{ bg: hoverBg, transform: \"translateY(-2px)\", shadow: \"md\" }}\n      onClick={() => onSelect(id)}\n      role=\"button\"\n      aria-label={`View ${name} visa requirements`}\n    >\n      <VStack spacing={3}>\n        <Image\n          src={flag}\n          alt={`${name} flag`}\n          boxSize=\"80px\"\n          objectFit=\"cover\"\n          borderRadius=\"md\"\n          border=\"1px solid\"\n          borderColor={borderColor}\n        />\n        <Button\n          colorScheme=\"blue\"\n          variant=\"ghost\"\n          rightIcon={<ArrowRightCircle size={16} />}\n        >\n          {name}\n        </Button>\n      </VStack>\n    </Box>\n  );\n};\n\n// Main Visa Wizard component\nconst VisaWizard: React.FC = () => {\n  // Check for country parameter in URL query\n  const [selectedCountry, setSelectedCountry] = useState<string | null>(null);\n  const [showDecisionTree, setShowDecisionTree] = useState<boolean>(false);\n\n  const primaryColor = useColorModeValue(\"blue.600\", \"blue.300\");\n  const textColor = useColorModeValue(\"gray.600\", \"gray.300\");\n\n  // Use effect to check for country parameter in URL on component mount\n  React.useEffect(() => {\n    // Check if we're in the browser environment\n    if (typeof window !== \"undefined\") {\n      const params = new URLSearchParams(window.location.search);\n      const countryParam = params.get(\"country\");\n\n      if (countryParam) {\n        // Validate that the country exists in our list\n        const validCountry = visas.find((c) => c.id === countryParam);\n        if (validCountry) {\n          setSelectedCountry(countryParam);\n          setShowDecisionTree(true);\n        }\n      }\n    }\n  }, []);\n\n  const handleSelectCountry = (id: string) => {\n    setSelectedCountry(id);\n\n    // Immediately show the decision tree when a country is selected\n    setShowDecisionTree(true);\n\n    // Update URL with the selected country (without page reload)\n    if (typeof window !== \"undefined\") {\n      const url = new URL(window.location.href);\n      url.searchParams.set(\"country\", id);\n      window.history.pushState({}, \"\", url);\n    }\n  };\n\n  const handleBackToCountries = () => {\n    setShowDecisionTree(false);\n\n    // Remove country parameter from URL (without page reload)\n    if (typeof window !== \"undefined\") {\n      const url = new URL(window.location.href);\n      url.searchParams.delete(\"country\");\n      window.history.pushState({}, \"\", url);\n    }\n  };\n\n  // Find the selected country data\n  const selectedCountryData = selectedCountry\n    ? visas.find((country) => country.id === selectedCountry)\n    : null;\n\n  return (\n    <Container maxW=\"6xl\" py={10}>\n      {!showDecisionTree ? (\n        <>\n          <VStack spacing={6} mb={12} textAlign=\"center\">\n            <Globe size={50} color=\"var(--chakra-colors-blue-500)\" />\n            <Heading as=\"h1\" size=\"xl\" color={primaryColor}>\n              Visa Requirements Finder\n            </Heading>\n            <Text fontSize=\"lg\" color={textColor} maxW=\"3xl\">\n              Planning a trip abroad? Click on a destination country to find the\n              right visa for your needs.\n            </Text>\n          </VStack>\n\n          <SimpleGrid columns={{ base: 1, sm: 2, md: 3, lg: 4 }} spacing={6}>\n            {visas.map((country) => (\n              <CountryCard\n                key={country.id}\n                id={country.id}\n                name={country.name}\n                flag={country.flag}\n                isSelected={selectedCountry === country.id}\n                onSelect={handleSelectCountry}\n              />\n            ))}\n          </SimpleGrid>\n        </>\n      ) : (\n        <>\n          {selectedCountryData && (\n            <Box mb={6}>\n              <Flex align=\"center\" gap={4}>\n                <Button\n                  variant=\"ghost\"\n                  colorScheme=\"blue\"\n                  onClick={handleBackToCountries}\n                  leftIcon={<ArrowLeftCircle size={32} />}\n                />\n                <Image\n                  src={selectedCountryData.flag}\n                  alt={`${selectedCountryData.name} flag`}\n                  boxSize=\"40px\"\n                  borderRadius=\"md\"\n                />\n                <Heading as=\"h2\" size=\"lg\" color={primaryColor}>\n                  {selectedCountryData.name} Visa Requirements\n                </Heading>\n              </Flex>\n            </Box>\n          )}\n\n          {selectedCountryData && (\n            <VisaDecisionTree decisionTree={selectedCountryData.decisionTree} />\n          )}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default VisaWizard;\n","import { Box } from \"@chakra-ui/react\";\nimport { HeadFC } from \"gatsby\";\nimport React from \"react\";\nimport VisaWizard from \"../components/VisaWizard\";\n\nconst VisaWizardPage = () => {\n  return (\n    <Box py={8}>\n      <VisaWizard />\n    </Box>\n  );\n};\n\nexport default VisaWizardPage;\n\nexport const Head: HeadFC = () => (\n  <title>Visa Wizard | Find the Right Visa for Your Trip</title>\n);\n"],"names":["Globe","createLucideIcon","cx","cy","r","key","d","CircleArrowLeft","CountryCard","_ref","id","name","flag","isSelected","onSelect","bgColor","useColorModeValue","borderColor","hoverBg","selectedBg","selectedBorder","React","Box","p","borderWidth","borderRadius","bg","cursor","transition","_hover","transform","shadow","onClick","role","VStack","spacing","Image","src","alt","boxSize","objectFit","border","Button","colorScheme","variant","rightIcon","ArrowRightCircle","size","VisaWizard","selectedCountry","setSelectedCountry","useState","showDecisionTree","setShowDecisionTree","primaryColor","textColor","window","countryParam","URLSearchParams","location","search","get","visas","find","c","handleSelectCountry","url","URL","href","searchParams","set","history","pushState","selectedCountryData","country","Container","maxW","py","mb","Flex","align","gap","handleBackToCountries","delete","leftIcon","ArrowLeftCircle","Heading","as","color","VisaDecisionTree","decisionTree","textAlign","Text","fontSize","SimpleGrid","columns","base","sm","md","lg","map","VisaWizardPage","Head"],"sourceRoot":""}