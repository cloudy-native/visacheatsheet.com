{"version":3,"file":"component---src-pages-blog-index-tsx-71fd4108598a0250f34c.js","mappings":"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","sources":["webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/tag/tag.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/stack/h-stack.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/utils/dist/esm/call-all.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/avatar/avatar-context.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/avatar/avatar-name.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/avatar/generic-avatar-icon.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/avatar/avatar-image.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/image/use-image.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/avatar/avatar.mjs","webpack://gatsby-typescript-chakraui/./src/pages/blog/index.tsx","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport { VStack };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext } from '@chakra-ui/utils';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nconst Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */ jsx(TagStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(chakra.span, { ref, ...ownProps, __css: containerStyles }) });\n});\nTag.displayName = \"Tag\";\nconst TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */ jsx(chakra.span, { ref, noOfLines: 1, ...props, __css: styles.label });\n});\nTagLabel.displayName = \"TagLabel\";\nconst TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginEnd: \"0.5rem\", ...props }));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nconst TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginStart: \"0.5rem\", ...props }));\nTagRightIcon.displayName = \"TagRightIcon\";\nconst TagCloseIcon = (props) => /* @__PURE__ */ jsx(Icon, { verticalAlign: \"inherit\", viewBox: \"0 0 512 512\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }\n) });\nTagCloseIcon.displayName = \"TagCloseIcon\";\nconst TagCloseButton = forwardRef(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props;\n    const styles = useTagStyles();\n    const btnStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.button,\n      {\n        ref,\n        \"aria-label\": \"close\",\n        ...rest,\n        type: \"button\",\n        disabled: isDisabled,\n        __css: btnStyles,\n        children: children || /* @__PURE__ */ jsx(TagCloseIcon, {})\n      }\n    );\n  }\n);\nTagCloseButton.displayName = \"TagCloseButton\";\n\nexport { Tag, TagCloseButton, TagLabel, TagLeftIcon, TagRightIcon, useTagStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst HStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"row\", ref }));\nHStack.displayName = \"HStack\";\n\nexport { HStack };\n","function callAll(...fns) {\n  return function mergedFn(...args) {\n    fns.forEach((fn) => fn?.(...args));\n  };\n}\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn?.(event);\n      return event?.defaultPrevented;\n    });\n  };\n}\n\nexport { callAll, callAllHandlers };\n","'use client';\nimport { createContext } from '@chakra-ui/utils';\n\nconst [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\nexport { AvatarStylesProvider, useAvatarStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useAvatarStyles } from './avatar-context.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction initials(name) {\n  const names = name.trim().split(\" \");\n  const firstName = names[0] ?? \"\";\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\";\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ jsx(chakra.div, { role: \"img\", \"aria-label\": name, ...rest, __css: styles.label, children: name ? getInitials?.(name) : null });\n}\nAvatarName.displayName = \"AvatarName\";\n\nexport { AvatarName, initials };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\n\nconst GenericAvatarIcon = (props) => /* @__PURE__ */ jsxs(\n  chakra.svg,\n  {\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\",\n    ...props,\n    children: [\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n        }\n      )\n    ]\n  }\n);\n\nexport { GenericAvatarIcon };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cloneElement } from 'react';\nimport { AvatarName } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { useImage } from '../image/use-image.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin\n  } = props;\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ jsx(\n      AvatarName,\n      {\n        className: \"chakra-avatar__initials\",\n        getInitials,\n        name\n      }\n    ) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      src,\n      srcSet,\n      alt: name ?? iconLabel,\n      onLoad,\n      referrerPolicy,\n      crossOrigin: crossOrigin ?? void 0,\n      className: \"chakra-avatar__img\",\n      loading,\n      __css: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius\n      }\n    }\n  );\n}\nAvatarImage.displayName = \"AvatarImage\";\n\nexport { AvatarImage };\n","'use client';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef(null);\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad?.(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError?.(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nconst shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport { shouldShowFallbackImage, useImage };\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { defineStyle, omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState } from 'react';\nimport { AvatarStylesProvider } from './avatar-context.mjs';\nimport { AvatarImage } from './avatar-image.mjs';\nimport { initials } from './avatar-name.mjs';\nimport { GenericAvatarIcon } from './generic-avatar-icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst baseStyle = defineStyle({\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n});\nconst Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback,\n            crossOrigin,\n            referrerPolicy\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport { Avatar, baseStyle };\n","import {\n  Box,\n  Container,\n  Heading,\n  Text,\n  Stack,\n  SimpleGrid,\n  useColorModeValue,\n  Link as ChakraLink,\n  VStack,\n  HStack,\n  Tag,\n  Avatar,\n  Flex,\n} from \"@chakra-ui/react\";\nimport {\n  HeadFC,\n  PageProps,\n  Link as GatsbyLink,\n  graphql,\n  useStaticQuery,\n} from \"gatsby\";\nimport * as React from \"react\";\n\nconst BlogHero = () => {\n  const bgGradient = useColorModeValue(\n    \"linear(to-b, blue.50, white)\",\n    \"linear(to-b, gray.900, gray.800)\"\n  );\n\n  const accentColor = useColorModeValue(\"blue.600\", \"blue.300\");\n  const textColor = useColorModeValue(\"gray.700\", \"gray.100\");\n\n  return (\n    <Box\n      bg={useColorModeValue(\"blue.50\", \"gray.900\")}\n      bgGradient={bgGradient}\n      pt={16}\n      pb={10}\n      borderBottomWidth=\"1px\"\n      borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n    >\n      <Stack spacing={6} textAlign=\"center\">\n        <Heading\n          as=\"h1\"\n          fontSize={{ base: \"3xl\", md: \"4xl\", lg: \"5xl\" }}\n          fontWeight=\"bold\"\n          color={accentColor}\n          lineHeight=\"1.2\"\n        >\n          Blog\n        </Heading>\n\n        <Text\n          fontSize={{ base: \"md\", md: \"lg\" }}\n          color={textColor}\n          maxW=\"3xl\"\n          mx=\"auto\"\n          lineHeight=\"1.8\"\n        >\n          We love to share our story and what we found along the way.\n        </Text>\n      </Stack>\n    </Box>\n  );\n};\n\ninterface BlogPostCardProps {\n  title: string;\n  excerpt: string;\n  date: string;\n  author: {\n    name: string;\n    avatar?: string;\n  };\n  slug: string;\n  tags?: string[];\n  isFeatured?: boolean;\n}\n\nconst BlogPostCard: React.FC<BlogPostCardProps> = ({\n  title,\n  excerpt,\n  date,\n  author,\n  slug,\n  tags = [],\n  isFeatured = false,\n}) => {\n  const cardBg = useColorModeValue(\"white\", \"gray.800\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.700\");\n  const textColor = useColorModeValue(\"gray.700\", \"gray.300\");\n  const tagBg = useColorModeValue(\"blue.50\", \"blue.900\");\n\n  return (\n    <Box\n      as={GatsbyLink}\n      to={slug}\n      display=\"block\"\n      _hover={{ textDecoration: \"none\" }}\n    >\n      <Box\n        p={6}\n        h=\"full\"\n        bg={cardBg}\n        borderWidth=\"1px\"\n        borderColor={borderColor}\n        borderRadius=\"lg\"\n        shadow=\"md\"\n        transition=\"all 0.3s\"\n        position=\"relative\"\n        _hover={{\n          transform: \"translateY(-4px)\",\n          shadow: \"lg\",\n        }}\n      >\n        {isFeatured && (\n          <Tag\n            position=\"absolute\"\n            top={3}\n            right={3}\n            colorScheme=\"blue\"\n            size=\"sm\"\n          >\n            Featured\n          </Tag>\n        )}\n\n        <VStack align=\"start\" spacing={4}>\n          <Heading as=\"h3\" fontSize=\"xl\" lineHeight=\"tight\">\n            {title}\n          </Heading>\n\n          <Text color={textColor} noOfLines={3}>\n            {excerpt}\n          </Text>\n\n          <HStack spacing={2} mt={2} wrap=\"wrap\">\n            {tags.map((tag) => (\n              <Tag key={tag} size=\"sm\" bg={tagBg} my={1}>\n                {tag}\n              </Tag>\n            ))}\n          </HStack>\n\n          <Flex justify=\"space-between\" align=\"center\" w=\"full\" mt={2}>\n            <HStack>\n              <Avatar name={author.name} src={author.avatar} size=\"xs\" />\n              <Text fontSize=\"sm\" fontWeight=\"medium\">\n                {author.name}\n              </Text>\n            </HStack>\n            <Text\n              fontSize=\"sm\"\n              color={useColorModeValue(\"gray.500\", \"gray.400\")}\n            >\n              {date}\n            </Text>\n          </Flex>\n        </VStack>\n      </Box>\n    </Box>\n  );\n};\n\nconst BlogPage: React.FC<PageProps> = () => {\n  // Use GraphQL to query blog posts\n  const data = useStaticQuery(graphql`\n    query BlogPostsQuery {\n      allMarkdownRemark(\n        sort: { frontmatter: { date: DESC } }\n        filter: { fileAbsolutePath: { regex: \"/content/blog/\" } }\n      ) {\n        nodes {\n          id\n          excerpt(pruneLength: 160)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            description\n            author\n            tags\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = data.allMarkdownRemark.nodes.map((node) => ({\n    title: node.frontmatter.title,\n    excerpt: node.frontmatter.description || node.excerpt,\n    date: new Date(node.frontmatter.date).toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    }),\n    author: {\n      name: node.frontmatter.author || \"Gatsby Team\",\n    },\n    slug: node.fields.slug,\n    tags: node.frontmatter.tags || [],\n    // You could determine featured posts based on some criteria\n    isFeatured: node.frontmatter.tags?.includes(\"Tutorial\") || false,\n  }));\n\n  return (\n    <>\n      <BlogHero />\n\n      <Container maxW=\"6xl\" py={12}>\n        <VStack spacing={10} align=\"stretch\">\n          {posts.length === 0 ? (\n            <Text textAlign=\"center\" fontSize=\"lg\">\n              No blog posts found. Check back soon!\n            </Text>\n          ) : (\n            <SimpleGrid columns={{ base: 1, md: 2 }} spacing={8}>\n              {posts.map((post) => (\n                <BlogPostCard key={post.slug} {...post} />\n              ))}\n            </SimpleGrid>\n          )}\n        </VStack>\n      </Container>\n    </>\n  );\n};\n\nexport default BlogPage;\n\nexport const Head: HeadFC = () => (\n  <title>Visa Cheat Sheet | Find the Right Visa for Your Trip</title>\n);\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Heading = forwardRef(\n  function Heading2(props, ref) {\n    const styles = useStyleConfig(\"Heading\", props);\n    const { className, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(\n      chakra.h2,\n      {\n        ref,\n        className: cx(\"chakra-heading\", props.className),\n        ...rest,\n        __css: styles\n      }\n    );\n  }\n);\nHeading.displayName = \"Heading\";\n\nexport { Heading };\n"],"names":["VStack","props","ref","jsx","align","direction","displayName","TagStylesProvider","useTagStyles","name","errorMessage","Tag","styles","ownProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","value","children","span","__css","noOfLines","label","I","marginEnd","marginStart","TagCloseIcon","viewBox","fill","d","isDisabled","rest","btnStyles","justifyContent","outline","closeButton","button","type","disabled","HStack","callAllHandlers","fns","event","some","fn","defaultPrevented","AvatarStylesProvider","useAvatarStyles","hookName","providerName","initials","names","trim","split","firstName","lastName","length","charAt","AvatarName","getInitials","div","role","GenericAvatarIcon","jsxs","svg","color","width","height","className","AvatarImage","src","srcSet","onError","onLoad","borderRadius","loading","iconLabel","icon","ignoreFallback","referrerPolicy","crossOrigin","status","sizes","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","onerror","error","current","useImage","cloneElement","alt","objectFit","baseStyle","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","isLoaded","setIsLoaded","showBorder","onLoadProp","borderColor","avatarStyles","borderWidth","cx","BlogHero","bgGradient","useColorModeValue","accentColor","textColor","React","Box","bg","pt","pb","borderBottomWidth","borderBottomColor","Stack","spacing","Heading","as","fontSize","base","md","lg","lineHeight","Text","maxW","mx","BlogPostCard","_ref","title","excerpt","date","author","slug","tags","isFeatured","cardBg","tagBg","GatsbyLink","to","_hover","textDecoration","p","h","shadow","transition","transform","top","right","colorScheme","size","mt","wrap","map","tag","key","my","Flex","justify","w","avatar","BlogPage","posts","useStaticQuery","allMarkdownRemark","nodes","node","_node$frontmatter$tag","frontmatter","description","Date","toLocaleDateString","year","month","day","fields","includes","Container","py","SimpleGrid","columns","post","Object","assign","Head","h2"],"sourceRoot":""}