{"version":3,"file":"e8cbdd8cb81b541f753166f705b014727abf2bed-5e51a2c8a1dd6f94918c.js","mappings":"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","sources":["webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/circle-arrow-right.js","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/progress/progress.utils.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/progress/progress.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-context.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-header.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-body.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/list/list.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/badge/badge.mjs","webpack://gatsby-typescript-chakraui/./node_modules/@chakra-ui/react/dist/esm/card/card-footer.mjs","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/arrow-left.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/info.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/circle-check-big.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/icons/external-link.js","webpack://gatsby-typescript-chakraui/./src/decisiontrees/VisaDecisionTree.tsx","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/Icon.js","webpack://gatsby-typescript-chakraui/./node_modules/lucide-react/dist/esm/createLucideIcon.js"],"sourcesContent":["/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M8 12h8\", key: \"1wcyev\" }],\n  [\"path\", { d: \"m12 16 4-4-4-4\", key: \"1i9zcv\" }]\n];\nconst CircleArrowRight = createLucideIcon(\"CircleArrowRight\", __iconNode);\n\nexport { __iconNode, CircleArrowRight as default };\n//# sourceMappingURL=circle-arrow-right.js.map\n","'use client';\nimport { keyframes } from '@emotion/react';\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nconst spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nconst rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nconst progress = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" }\n});\nconst stripe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" }\n});\nfunction getProgressProps(options) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate,\n    role = \"progressbar\"\n  } = options;\n  const percent = valueToPercent(value, min, max);\n  const getAriaValueText = () => {\n    if (value == null)\n      return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role\n    },\n    percent,\n    value\n  };\n}\n\nexport { getProgressProps, progress, rotate, spin, stripe };\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext } from '@chakra-ui/utils';\nimport { getProgressProps, progress, stripe } from './progress.utils.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\n\nconst [ProgressStylesProvider, useProgressStyles] = createContext({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `\n});\nconst ProgressFilledTrack = forwardRef(\n  (props, ref) => {\n    const { min, max, value, isIndeterminate, role, ...rest } = props;\n    const progress2 = getProgressProps({\n      value,\n      min,\n      max,\n      isIndeterminate,\n      role\n    });\n    const styles = useProgressStyles();\n    const trackStyles = {\n      height: \"100%\",\n      ...styles.filledTrack\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        style: { width: `${progress2.percent}%`, ...rest.style },\n        ...progress2.bind,\n        ...rest,\n        __css: trackStyles\n      }\n    );\n  }\n);\nconst Progress = forwardRef((props, ref) => {\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueText,\n    title,\n    role,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Progress\", props);\n  const borderRadius = propBorderRadius ?? styles.track?.borderRadius;\n  const stripeAnimation = { animation: `${stripe} 1s linear infinite` };\n  const shouldAddStripe = !isIndeterminate && hasStripe;\n  const shouldAnimateStripe = shouldAddStripe && isAnimated;\n  const css = {\n    ...shouldAnimateStripe && stripeAnimation,\n    ...isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`\n    }\n  };\n  const trackStyles = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      borderRadius,\n      __css: trackStyles,\n      ...rest,\n      children: /* @__PURE__ */ jsxs(ProgressStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          ProgressFilledTrack,\n          {\n            \"aria-label\": ariaLabel,\n            \"aria-labelledby\": ariaLabelledBy,\n            \"aria-valuetext\": ariaValueText,\n            min,\n            max,\n            value,\n            isIndeterminate,\n            css,\n            borderRadius,\n            title,\n            role\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nProgress.displayName = \"Progress\";\n\nexport { Progress, useProgressStyles };\n","'use client';\nimport { createStylesContext } from '../system/providers.mjs';\n\nconst [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport { CardStylesProvider, useCardStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { CardStylesProvider } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport { Card };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardHeader };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardBody = forwardRef(\n  function CardBody2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__body\", className),\n        __css: styles.body,\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardBody };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, getValidChildren } from '@chakra-ui/utils';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nconst List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nconst OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nconst UnorderedList = forwardRef(\n  function UnorderedList2(props, ref) {\n    const { as, ...rest } = props;\n    return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n  }\n);\nUnorderedList.displayName = \"UnorderedList\";\nconst ListItem = forwardRef(\n  function ListItem2(props, ref) {\n    const styles = useListStyles();\n    return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n  }\n);\nListItem.displayName = \"ListItem\";\nconst ListIcon = forwardRef(\n  function ListIcon2(props, ref) {\n    const styles = useListStyles();\n    return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n  }\n);\nListIcon.displayName = \"ListIcon\";\n\nexport { List, ListIcon, ListItem, OrderedList, UnorderedList, useListStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Badge = forwardRef(function Badge2(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      className: cx(\"chakra-badge\", props.className),\n      ...rest,\n      __css: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles\n      }\n    }\n  );\n});\nBadge.displayName = \"Badge\";\n\nexport { Badge };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardFooter };\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\n];\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", __iconNode);\n\nexport { __iconNode, ArrowLeft as default };\n//# sourceMappingURL=arrow-left.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n];\nconst RotateCcw = createLucideIcon(\"RotateCcw\", __iconNode);\n\nexport { __iconNode, RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 16v-4\", key: \"1dtifu\" }],\n  [\"path\", { d: \"M12 8h.01\", key: \"e9boi3\" }]\n];\nconst Info = createLucideIcon(\"Info\", __iconNode);\n\nexport { __iconNode, Info as default };\n//# sourceMappingURL=info.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M21.801 10A10 10 0 1 1 17 3.335\", key: \"yps3ct\" }],\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }]\n];\nconst CircleCheckBig = createLucideIcon(\"CircleCheckBig\", __iconNode);\n\nexport { __iconNode, CircleCheckBig as default };\n//# sourceMappingURL=circle-check-big.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 3h6v6\", key: \"1q9fwt\" }],\n  [\"path\", { d: \"M10 14 21 3\", key: \"gplh6r\" }],\n  [\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\", key: \"a6xqqp\" }]\n];\nconst ExternalLink = createLucideIcon(\"ExternalLink\", __iconNode);\n\nexport { __iconNode, ExternalLink as default };\n//# sourceMappingURL=external-link.js.map\n","import {\n  Badge,\n  Box,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Collapse,\n  Container,\n  Divider,\n  Flex,\n  Heading,\n  Link,\n  List,\n  ListIcon,\n  ListItem,\n  Progress,\n  Text,\n  useColorModeValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport {\n  ArrowLeft,\n  ArrowRightCircle,\n  CheckCircle,\n  ExternalLink,\n  Info,\n  RotateCcw,\n} from \"lucide-react\";\nimport React, { useState } from \"react\";\nimport type {\n  AnswerOption,\n  VisaDecisionTree as DecisionTreeType,\n  VisaResult,\n} from \"./model\";\n\ninterface VisaDecisionTreeProps {\n  decisionTree: DecisionTreeType;\n}\n\nconst VisaDecisionTree: React.FC<VisaDecisionTreeProps> = ({\n  decisionTree,\n}) => {\n  const [currentQuestionId, setCurrentQuestionId] = useState<string>(\n    decisionTree.startQuestionId\n  );\n  const [result, setResult] = useState<VisaResult | null>(null);\n  const [journey, setJourney] = useState<\n    Array<{\n      questionId: string;\n      questionText: string;\n      answerId: string;\n      answerText: string;\n    }>\n  >([]);\n  const [showJourney, setShowJourney] = useState<boolean>(false);\n\n  // UI colors\n  const cardBg = useColorModeValue(\"white\", \"gray.800\");\n  const primaryColor = useColorModeValue(\"blue.500\", \"blue.300\");\n  const secondaryColor = useColorModeValue(\"teal.500\", \"teal.300\");\n  const borderColor = useColorModeValue(\"gray.200\", \"gray.700\");\n\n  const currentQuestion = decisionTree.questions[currentQuestionId];\n\n  const handleSelectOption = (option: AnswerOption) => {\n    // Add to journey\n    setJourney([\n      ...journey,\n      {\n        questionId: currentQuestionId,\n        questionText: currentQuestion.text,\n        answerId: option.id,\n        answerText: option.text,\n      },\n    ]);\n\n    // Check if the next destination is a result (starts with 'r')\n    if (option.nextQuestionId && option.nextQuestionId.startsWith(\"r\")) {\n      // Set the result from the decision tree results\n      const resultId = option.nextQuestionId;\n      setResult(decisionTree.results[resultId]);\n    } else if (option.nextQuestionId) {\n      // Move to the next question\n      setCurrentQuestionId(option.nextQuestionId);\n    }\n  };\n\n  const handleBack = () => {\n    if (result) {\n      setResult(null);\n    } else if (journey.length > 0) {\n      const newJourney = [...journey];\n      newJourney.pop();\n      setJourney(newJourney);\n\n      if (newJourney.length === 0) {\n        setCurrentQuestionId(decisionTree.startQuestionId);\n      } else {\n        const previousStep = newJourney[newJourney.length - 1];\n        setCurrentQuestionId(previousStep.questionId);\n      }\n    }\n  };\n\n  const resetJourney = () => {\n    setJourney([]);\n    setCurrentQuestionId(decisionTree.startQuestionId);\n    setResult(null);\n  };\n\n  // Calculate progress percentage - estimate 4 questions as average path length\n  const progressPercentage = result\n    ? 100\n    : Math.min(100, (journey.length / 4) * 100);\n\n  return (\n    <Container maxW=\"5xl\" py={8}>\n      {/* Navigation Buttons */}\n      <Flex mb={4} justify=\"space-between\" align=\"center\">\n        <Box>\n          {(journey.length > 0 || result) && (\n            <Button\n              leftIcon={<ArrowLeft size={16} />}\n              variant=\"outline\"\n              colorScheme=\"blue\"\n              size=\"sm\"\n              onClick={handleBack}\n            >\n              Back\n            </Button>\n          )}\n        </Box>\n        <Box>\n          <Button\n            rightIcon={<RotateCcw size={16} />}\n            variant=\"outline\"\n            colorScheme=\"teal\"\n            size=\"sm\"\n            onClick={resetJourney}\n          >\n            Start Over\n          </Button>\n        </Box>\n      </Flex>\n\n      {/* Progress Bar */}\n      <Box mb={6}>\n        <Progress\n          value={progressPercentage}\n          size=\"sm\"\n          colorScheme=\"blue\"\n          borderRadius=\"full\"\n        />\n        <Flex justify=\"space-between\" mt={2}>\n          <Text fontSize=\"sm\" color=\"gray.600\">\n            Start\n          </Text>\n          <Text fontSize=\"sm\" color=\"gray.600\">\n            Result\n          </Text>\n        </Flex>\n      </Box>\n\n      <Flex direction={{ base: \"column\", md: \"row\" }} gap={6}>\n        {/* Main Content */}\n        <Box flex=\"3\">\n          {/* Question Card */}\n          {!result && (\n            <Card\n              bg={cardBg}\n              borderWidth=\"1px\"\n              borderColor={borderColor}\n              borderRadius=\"lg\"\n              shadow=\"md\"\n              overflow=\"hidden\"\n            >\n              <CardHeader>\n                <Heading size=\"md\">{currentQuestion.text}</Heading>\n                {currentQuestion.helpText && (\n                  <Flex align=\"center\" mt={2}>\n                    <Info size={14} color=\"gray.500\" />\n                    <Text ml={2} fontSize=\"sm\" color=\"gray.600\">\n                      {currentQuestion.helpText}\n                    </Text>\n                  </Flex>\n                )}\n              </CardHeader>\n\n              <CardBody>\n                <VStack spacing={3} align=\"stretch\">\n                  {currentQuestion.options.map((option) => (\n                    <Button\n                      key={option.id}\n                      onClick={() => handleSelectOption(option)}\n                      size=\"lg\"\n                      justifyContent=\"space-between\"\n                      textAlign=\"left\"\n                      height=\"auto\"\n                      py={3}\n                      px={4}\n                      whiteSpace=\"normal\"\n                      borderWidth=\"1px\"\n                      borderColor={borderColor}\n                      _hover={{ bg: \"blue.50\", borderColor: \"blue.200\" }}\n                      borderRadius=\"md\"\n                    >\n                      <Text>{option.text}</Text>\n                      <ArrowRightCircle\n                        size={18}\n                        style={{ marginLeft: \"10px\", opacity: 0.6 }}\n                      />\n                    </Button>\n                  ))}\n                </VStack>\n              </CardBody>\n            </Card>\n          )}\n\n          {/* Result Card */}\n          {result && (\n            <Card\n              bg={cardBg}\n              borderWidth=\"1px\"\n              borderColor={borderColor}\n              borderRadius=\"lg\"\n              shadow=\"md\"\n              overflow=\"hidden\"\n            >\n              <CardHeader bg={primaryColor} color=\"white\">\n                <Heading size=\"md\" mb={2}>\n                  {result.title}\n                </Heading>\n              </CardHeader>\n\n              <CardBody>\n                <VStack spacing={6} align=\"stretch\">\n                  <Text>{result.description}</Text>\n\n                  <Box>\n                    <Heading size={\"md\"} mb={2} color={secondaryColor}>\n                      Requirements\n                    </Heading>\n                    <List spacing={2}>\n                      {result.requirements.map((req, index) => (\n                        <ListItem\n                          key={index}\n                          display=\"flex\"\n                          alignItems=\"flex-start\"\n                        >\n                          <ListIcon\n                            as={CheckCircle}\n                            color={secondaryColor}\n                            mt={1}\n                          />\n                          <Text>{req}</Text>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n\n                  <Flex justify=\"space-between\" wrap=\"wrap\" gap={4}>\n                    {result.processingTime && (\n                      <Box flex=\"1\" minW=\"200px\">\n                        <Heading size={\"md\"} mb={2} color={secondaryColor}>\n                          Processing Time\n                        </Heading>\n                        <Text>{result.processingTime}</Text>\n                      </Box>\n                    )}\n\n                    {result.cost && (\n                      <Box flex=\"1\" minW=\"200px\">\n                        <Heading size={\"md\"} mb={2} color={secondaryColor}>\n                          Cost\n                        </Heading>\n                        <Text>\n                          {result.cost.amount === 0\n                            ? \"Free\"\n                            : `${result.cost.amount} ${result.cost.currency}`}\n                        </Text>\n                      </Box>\n                    )}\n                  </Flex>\n\n                  <Box>\n                    <Heading size={\"md\"} mb={2} color={secondaryColor}>\n                      Applicable Countries\n                    </Heading>\n                    <Flex gap={2} flexWrap=\"wrap\">\n                      {result.applicableCountries.map((country, index) => (\n                        <Badge key={index} colorScheme=\"blue\" px={2} py={1}>\n                          {country}\n                        </Badge>\n                      ))}\n                    </Flex>\n                  </Box>\n\n                  {result.alternativeOptions &&\n                    result.alternativeOptions.length > 0 && (\n                      <>\n                        <Heading size={\"md\"} mb={2} color={secondaryColor}>\n                          Also Consider\n                        </Heading>{\" \"}\n                        <Flex wrap=\"wrap\" gap={2}>\n                          {result.alternativeOptions.map((altId, index) => {\n                            const altVisa = decisionTree.results[altId];\n                            return (\n                              altVisa && (\n                                <Button\n                                  key={index}\n                                  colorScheme=\"green\"\n                                  onClick={() => setResult(altVisa)}\n                                  leftIcon={<ArrowRightCircle size={10} />}\n                                >\n                                  {altVisa.title}\n                                </Button>\n                              )\n                            );\n                          })}\n                        </Flex>\n                      </>\n                    )}\n\n                  <Box>\n                    <Heading size={\"md\"} mb={2} color={secondaryColor}>\n                      Official Links\n                    </Heading>\n                    <List spacing={2}>\n                      {result.applicationLinks.map((link, index) => (\n                        <ListItem key={index}>\n                          <Link\n                            href={link.url}\n                            color={primaryColor}\n                            isExternal\n                            display=\"flex\"\n                            alignItems=\"center\"\n                          >\n                            {link.text}\n                            <ExternalLink\n                              size={14}\n                              style={{ marginLeft: \"5px\" }}\n                            />\n                          </Link>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n                </VStack>\n              </CardBody>\n\n              <CardFooter borderTopWidth=\"1px\" borderColor={borderColor}>\n                <Flex width=\"100%\" justify=\"space-between\">\n                  <Button\n                    leftIcon={<RotateCcw size={16} />}\n                    colorScheme=\"blue\"\n                    onClick={resetJourney}\n                  >\n                    Start New Search\n                  </Button>\n\n                  <Button\n                    rightIcon={<ArrowRightCircle size={16} />}\n                    variant=\"outline\"\n                    colorScheme=\"teal\"\n                    onClick={() =>\n                      window.open(result.applicationLinks[0].url, \"_blank\")\n                    }\n                  >\n                    Apply Now\n                  </Button>\n                </Flex>\n              </CardFooter>\n            </Card>\n          )}\n        </Box>\n\n        {/* Journey Sidebar */}\n        <Box\n          flex=\"1\"\n          display={{ base: result ? \"block\" : \"none\", md: \"block\" }}\n        >\n          <Card\n            bg={cardBg}\n            borderWidth=\"1px\"\n            borderColor={borderColor}\n            borderRadius=\"lg\"\n            shadow=\"md\"\n          >\n            <CardHeader\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Heading size=\"sm\">Your Journey</Heading>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                colorScheme=\"blue\"\n                onClick={() => setShowJourney(!showJourney)}\n                display={{ base: \"block\", md: \"none\" }}\n              >\n                {showJourney ? \"Hide\" : \"Show\"}\n              </Button>\n            </CardHeader>\n\n            <Collapse in={showJourney || { base: false, md: true }}>\n              <CardBody>\n                {journey.length === 0 ? (\n                  <Text fontSize=\"sm\" color=\"gray.500\">\n                    No selections yet\n                  </Text>\n                ) : (\n                  <VStack spacing={4} align=\"stretch\">\n                    {journey.map((step, index) => (\n                      <Box key={index}>\n                        <Text fontSize=\"xs\" color=\"gray.500\">\n                          Question {index + 1}\n                        </Text>\n                        <Text fontWeight=\"medium\" fontSize=\"sm\">\n                          {step.questionText}\n                        </Text>\n                        <Flex align=\"center\">\n                          <Badge colorScheme=\"blue\" mt={1}>\n                            {step.answerText}\n                          </Badge>\n                        </Flex>\n                        {index < journey.length - 1 && <Divider my={2} />}\n                      </Box>\n                    ))}\n                  </VStack>\n                )}\n              </CardBody>\n            </Collapse>\n          </Card>\n        </Box>\n      </Flex>\n    </Container>\n  );\n};\n\nexport default VisaDecisionTree;\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.483.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n"],"names":["CircleArrowRight","cx","cy","r","key","d","strokeDasharray","strokeDashoffset","transform","progress","left","stripe","from","backgroundPosition","to","ProgressStylesProvider","useProgressStyles","name","errorMessage","ProgressFilledTrack","props","ref","min","max","value","isIndeterminate","role","rest","progress2","options","valueText","getValueText","percent","valueToPercent","bind","getAriaValueText","getProgressProps","trackStyles","height","filledTrack","jsx","div","style","width","__css","Progress","hasStripe","isAnimated","children","borderRadius","propBorderRadius","ariaLabel","ariaLabelledBy","ariaValueText","title","styles","track","css","animation","position","willChange","minWidth","overflow","jsxs","displayName","CardStylesProvider","useCardStyles","Card","className","direction","justify","align","display","flexDirection","justifyContent","alignItems","wordWrap","container","CardHeader","header","CardBody","body","ListStylesProvider","useListStyles","List","styleType","stylePosition","spacing","validChildren","selector","spacingStyle","mt","ul","listStyleType","listStylePosition","as","marginStart","ListItem","li","item","ListIcon","I","icon","Badge","span","whiteSpace","verticalAlign","CardFooter","footer","ArrowLeft","createLucideIcon","RotateCcw","Info","CircleCheckBig","ExternalLink","_ref","decisionTree","currentQuestionId","setCurrentQuestionId","useState","startQuestionId","result","setResult","journey","setJourney","showJourney","setShowJourney","cardBg","useColorModeValue","primaryColor","secondaryColor","borderColor","currentQuestion","questions","resetJourney","progressPercentage","Math","length","React","Container","maxW","py","Flex","mb","Box","Button","leftIcon","size","variant","colorScheme","onClick","handleBack","newJourney","_toConsumableArray","pop","previousStep","questionId","rightIcon","Text","fontSize","color","base","md","gap","flex","bg","borderWidth","shadow","Heading","text","helpText","ml","VStack","map","option","id","concat","questionText","answerId","answerText","nextQuestionId","startsWith","resultId","results","handleSelectOption","textAlign","px","_hover","ArrowRightCircle","marginLeft","opacity","description","requirements","req","index","CheckCircle","wrap","processingTime","minW","cost","amount","currency","flexWrap","applicableCountries","country","alternativeOptions","altId","altVisa","applicationLinks","link","Link","href","url","isExternal","borderTopWidth","window","open","Collapse","in","step","fontWeight","Divider","my","mergeClasses","classes","filter","array","Boolean","trim","indexOf","join","defaultAttributes","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","forwardRef","absoluteStrokeWidth","iconNode","createElement","Number","tag","attrs","Array","isArray","iconName","Component","string","replace","toLowerCase"],"sourceRoot":""}